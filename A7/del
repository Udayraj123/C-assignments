	if(fileInput){
		gives("Opening local input file- operations.txt\n");
		fp=fopen("operations.txt","r");
	}

		if(fileInput) {
	fscanf(fp,"%d",&N); //take first line to N //this is for command line file too.
	fscanf(fp,"%d",&M);
}


else{
	j=0,i=0;
	int newset=1;
	gives("Input read from file: \n");
	while(!feof(fp) && i<N && j<M){
		fscanf(fp,"%d, ",&a);
		if(a>0){
			printf("%d",a);
			continue;
			nd* elt = make_set(a); //initialize the nodes of the graph
			nodeArray[i] = elt;
	//union here if no E before
			if(!newset) {
				gives("_");
				union_set(nodeArray[i-1],elt); //this is forming Kj
			}
			else gives(" ");
			newset=0;
			i++;
		}
		else {
			printf("%d\n",a);
			j++;
			newset=1;
		}
		//make new set & update currSet
	}
	fclose(fp);
}





void showMenu(int N,nd* nodeArray[]){
	int choice;
	gives("\nEnter your choice : \n1.find_set\n2.union_set\n0.exit\n"); choice=take();
	gives("\n");
	switch(choice){
		case 1:
		gives("Enter x :");int x=take();
		nd * xObj = getObject(x,N,nodeArray);
		if(xObj!=NULL){
			gives("Set representative of x is : \t");
			give( find_set(xObj)->val );
		}
		else {
			gives("Invalid value - "); give(x);gives("\n");
		}
		break;
		case 2:
		gives("Enter x1 & x2 :");
		int x1=take(),x2=take();
		nd* xObj1 = getObject(x1,N,nodeArray);
		nd* xObj2 = getObject(x2,N,nodeArray);
		if(xObj1 != NULL && xObj2!=NULL ){
			gives("Disjoint sets after union : \t");
			union_set(xObj1,xObj2);
		}
		else {
			gives("Invalid values - "); give(x1); give(x2);gives("\n");
		}
		printSets(N,nodeArray);
		break;
		case 0:
		gives("Exiting the program.\n"); return;
		break;
		default:
		gives("Please enter valid choice : ");
		break;
	}
	showMenu(N,nodeArray);
}
